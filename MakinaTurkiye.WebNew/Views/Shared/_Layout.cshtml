@using MakinaTurkiye.Core.Infrastructure;
<!doctype html>
<html lang="tr">
<head>
@Html.Action("MetaTag", "Common", new { area = "" })
@{Html.RenderPartial("_Head");}
@Scripts.Render("~/js")
<link href="https://fonts.googleapis.com/css?family=Raleway:300,400,500,700,800&amp;subset=latin-ext&display=swap" rel="stylesheet">
<link rel="stylesheet" href="/Content/V2/public/build/css/bundle-main.css?v=10.2" />
<link rel="stylesheet" href="@Url.Content("~/Content/V2/assets/css/autocomplete.css")" />
<link rel="stylesheet" href="@Url.Content("~/Content/V2/assets/css/jquery.autocomplete.css?v=3")" />
<script async>
        (function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-TR7HZJT');
</script>
@RenderSection("headercontent", required: false)
<link rel="alternate" hreflang="tr-TR" href="@Request.Url.ToString()" />
</head>
<body class="facelift-v2">
 <script type="application/ld+json">
     {
     "@@context": "http://schema.org",
     "@@type": "Organization",
     @*"url": "https://www.makinaturkiye.com",*@
     "url": "/",
     "name": "makinaturkiye.com",
     "logo" : "https://www.makinaturkiye.com/Content/V2/images/makinaturkiye.png",
     "contactPoint": {
     "@@type": "ContactPoint",
     "telephone": "+90 212 255 7152",
     "contactType": "Customer service"
     }
     }
 </script>
 <!-- Json Ld Ayar-->
 <!-- Google Tag Manager (noscript) -->
 <noscript>
     <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TR7HZJT" height="0" width="0" style="display: none; visibility: hidden"></iframe>
 </noscript>
 <!-- End Google Tag Manager (noscript) -->
 <div id="fb-root"></div>
 <div class="responsive-overlay"></div>
 @Html.Partial("_Header")
 @RenderSection("HomePageSlider", false)
 @RenderBody()
 @{Html.RenderAction("Content", "Footer");}
@{
    MakinaTurkiye.Core.Configuration.MakinaTurkiyeConfig config = EngineContext.Current.Resolve<MakinaTurkiye.Core.Configuration.MakinaTurkiyeConfig>();
    if (!config.ApplicationTestModeEnabled)
    {
    <script>
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', function () {
                navigator.serviceWorker.register('service-worker.js').then(function (registration) {
                        /*console.log('Registered!')*/;
                }, function (err) {
                    //console.log('ServiceWorker registration failed: ', err);
                }).catch(function (err) {
                    //console.log(err);
                });
            });
        }
        else
        {

        }
        let deferredPrompt;
        const installButton = document.getElementById("install_button");
        window.addEventListener("beforeinstallprompt", e => {
            console.log("beforeinstallprompt fired");
            // Prevent Chrome 76 and earlier from automatically showing a prompt
            e.preventDefault();
            // Stash the event so it can be triggered later.
            deferredPrompt = e;
            // Show the install button
            installButton.hidden = false;
            installButton.addEventListener("click", installApp);
        });
        function installApp() {
            deferredPrompt.prompt();
            installButton.disabled = true;
            deferredPrompt.userChoice.then(choiceResult => {
                if (choiceResult.outcome === "accepted") {
                    console.log("PWA setup accepted");
                    installButton.hidden = true;
                } else {
                    console.log("PWA setup rejected");
                }
                installButton.disabled = false;
                deferredPrompt = null;
            });
        }
        window.addEventListener("appinstalled", evt => {
            console.log("appinstalled fired", evt);
        });
    </script>
    }
}
</body>
</html>
