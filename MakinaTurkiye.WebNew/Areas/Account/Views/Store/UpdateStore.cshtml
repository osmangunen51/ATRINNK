@model StoreModel
@using NeoSistem.MakinaTurkiye.Web.Areas.Account.Models
@using NeoSistem.MakinaTurkiye.Web.Models
@using NeoSistem.MakinaTurkiye.Web.Models.UtilityModel
@using NeoSistem.MakinaTurkiye.Core.Web.Helpers
@using NeoSistem.MakinaTurkiye.Web.Helpers
@using System.Diagnostics
@using NeoSistem.MakinaTurkiye.Web.Models.Home
@using NeoSistem.MakinaTurkiye.Web.Models.MemberShip
@using NeoSistem.MakinaTurkiye.Web.Models.Authentication
@using MakinaTurkiye.Entities.Tables.Members
@using NeoSistem.MakinaTurkiye.Web.Models.ViewModels
@using NeoSistem.MakinaTurkiye.Web.Models.Products
@using NeoSistem.MakinaTurkiye.Web.Models.Catalog
@using NeoSistem.MakinaTurkiye.Web.Models.Entities
@using NeoSistem.MakinaTurkiye.Web.Models.ProductRequests
@using NeoSistem.MakinaTurkiye.Web.Models.Stores
@using NeoSistem.MakinaTurkiye.Core.Web
@using NeoSistem.MakinaTurkiye.Web.Models.StoreNews
@using System.Globalization
@using NeoSistem.MakinaTurkiye.Web.Models.StoreProfiles
@using NeoSistem.MakinaTurkiye.Web.Models.Videos
@using NeoSistem.MakinaTurkiye.Web.Models.Adverts
@using MakinaTurkiye.Entities.Tables.Catalog
@using NeoSistem.MakinaTurkiye.Web.Areas.Account.Models.Advert
@using NeoSistem.MakinaTurkiye.Web.Areas.Account.Models.FavoriteProducts
@using NeoSistem.MakinaTurkiye.Web.Areas.Account.Models.Checkouts
@using NeoSistem.MakinaTurkiye.Web.Areas.Account.Models.OtherSettings
@using NeoSistem.MakinaTurkiye.Web.Areas.Account.Constants

@{
    Layout = "~/Views/Shared/_LayoutAccountMaster.cshtml";
    //Layout = "~/Views/Shared/_LayoutMainMaster.cshtml";
    //Layout = "~/Views/Shared/_LayoutStoreProfileMaster.cshtml";


}


@section headercontent{
    <script type="text/javascript" src="/Content/v2/assets/js/CKEditor/ckeditor.js"></script>
}

<div class="row">
    <div class="col-sm-12 col-md-12 store-panel-menu-header" style="margin-top: -20px; height: 60px;">
        @Html.Partial("LeftMenu", Model.LeftMenu)
    </div>
    <div class="col-md-12">
        <h4 class="mt0 text-info">
            Tanıtım Bilgilerini Güncelle
        </h4>
    </div>
</div>
<div class="row">

    <div class="col-sm-12 col-md-12">
        <div>

            @using (Html.BeginForm("UpdateStore", "Store", FormMethod.Post, new { role = "form", @class = "form-horizontal" }))
            {
                <div class="well store-panel-container col-xs-12">

                    @if (ViewData["storeUrlCheck"] == "false")
                    {

                    }
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Firma Ünvanı
                        </label>
                        <div class="col-sm-4">
                            @Model.StoreName
                       </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Firma Kısa Adı
                        </label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Store.StoreShortName,
                            new Dictionary<string, object> { { "class", "mt-form-control" }, { "data-validation-engine", "validate[required]" }, { "placeholder", "Demo Makina" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Firma Web Adresi

                        </label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Store.StoreWeb,
                            new Dictionary<string, object> { { "class", "mt-form-control" }, { "data-validation-engine", "validate[required,custom[url]]" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Kuruluş Yılı

                        </label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => Model.Store.StoreEstablishmentDate,
                            new Dictionary<string, object> { { "class", "mt-form-control" }, { "data-validation-engine", "validate[required]" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Faaliyet Tipi

                        </label>
                        <div class="col-sm-9 col-md-7 col-lg-7">
                            @foreach (var item in Model.ActivityItems)
                            {
                                bool checkActivity = Model.StoreActivityItems.Any(c => c.ActivityTypeId == item.ActivityTypeId);
                                <div class="col-sm-6 col-md-4">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBox("ActivityName", checkActivity,
                                            new Dictionary<string, object>
                                                { {"name", "group[group]"},{ "value", item.ActivityTypeId }, { "data-validation-engine", "validate[minCheckbox[1]]" } })
                                            @item.ActivityName
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Şirket Sermayesi

                        </label>
                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.Store.StoreCapital, Model.StoreCapitalItems,
                            new Dictionary<string, object> { { "class", "selectpicker" }, { "data-validation-engine", "validate[funcCall[ifSelectNotEmpty]]" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Çalışan Sayısı

                        </label>
                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.Store.StoreEmployeesCount, Model.EmployeesCountItems,
                            new Dictionary<string, object> { { "class", "selectpicker" }, { "data-validation-engine", "validate[funcCall[ifSelectNotEmpty]]" }, { "size", "10" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Yıllık Ciro

                        </label>
                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.Store.StoreEndorsement, Model.StoreEndorsementItems,
                            new Dictionary<string, object> { { "class", "selectpicker" }, { "data-validation-engine", "validate[funcCall[ifSelectNotEmpty]]" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Şirket Türü

                        </label>
                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.Store.StoreType, Model.StoreTypeItems,
                            new Dictionary<string, object> { { "class", "selectpicker" }, { "data-validation-engine", "validate[funcCall[ifSelectNotEmpty]]" } })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-4 control-label">
                            Firma Kısa Bilgi
                        </label>
                        <div class="col-sm-4">
                            @Html.TextAreaFor(model => model.Store.StoreAbout, new { maxLength = 200, @class = "mt-form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-offset-4 col-sm-2">
                            <button class="btn btn-sign-up" data-rel="form-submit" type="submit">
                                Kaydet

                            </button>
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    CKEDITOR.replace('ck-editor', {
        toolbar: [
            //{ name: 'document', items: ['Source', '-', 'NewPage', 'Preview', '-', 'Templates'] },	// Defines toolbar group with name (used to create voice label) and items in 3 subgroups.
            //['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'],			// Defines toolbar group without name.
            '/',																					// Line break - next group will be placed in new line.
            { name: 'basicstyles', items: ['Bold'] },
        ],

    });
</script>
    </asp:Content>
