@model NeoSistem.MakinaTurkiye.Management.Models.ViewModel.PacketViewModel

@section TitleContent {

    Satış Paket Listesi

}
@section HeadContent
{
    <link href="~/Content/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <style>
        .panel-mt {
            border-color: #ddd
        }

            .panel-mt > .panel-heading {
                border-color: #ddd;
                color: #757281;
                background: #f9fcf7;
                background: -moz-linear-gradient(top,rgba(249,252,247,1) 0,rgba(245,249,240,1) 100%);
                background: -webkit-gradient(linear,left top,left bottom,color-stop(0,rgba(249,252,247,1)),color-stop(100%,rgba(245,249,240,1)));
                background: -webkit-linear-gradient(top,rgba(249,252,247,1) 0,rgba(245,249,240,1) 100%);
                background: -o-linear-gradient(top,rgba(249,252,247,1) 0,rgba(245,249,240,1) 100%);
                background: -ms-linear-gradient(top,rgba(249,252,247,1) 0,rgba(245,249,240,1) 100%);
                background: linear-gradient(to bottom,rgba(249,252,247,1) 0,rgba(245,249,240,1) 100%);
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f9fcf7', endColorstr='#f5f9f0', GradientType=0 )
            }

                .panel-mt > .panel-heading span {
                    margin-right: 3px
                }

        .panel-mt2 {
            border: 1px solid #ddd
        }

            .panel-mt2 > .panel-heading {
                color: #4c3466;
                font-weight: 700;
                border-color: #ddd;
                background: #e3ecf6;
                background: -moz-linear-gradient(top,rgba(227,236,246,1) 0,rgba(201,220,244,1) 100%);
                background: -webkit-gradient(linear,left top,left bottom,color-stop(0,rgba(227,236,246,1)),color-stop(100%,rgba(201,220,244,1)));
                background: -webkit-linear-gradient(top,rgba(227,236,246,1) 0,rgba(201,220,244,1) 100%);
                background: -o-linear-gradient(top,rgba(227,236,246,1) 0,rgba(201,220,244,1) 100%);
                background: -ms-linear-gradient(top,rgba(227,236,246,1) 0,rgba(201,220,244,1) 100%);
                background: linear-gradient(to bottom,rgba(227,236,246,1) 0,rgba(201,220,244,1) 100%);
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e3ecf6', endColorstr='#c9dcf4', GradientType=0 )
            }

            .panel-mt2 .panel-list-item {
                border: 0;
                padding: 5px;
                margin: 0 0 10px
            }

                .panel-mt2 .panel-list-item img {
                    margin-right: 10px;
                    border: 4px solid #F6FAF1
                }

                .panel-mt2 .panel-list-item .panel-list-item-caption {
                    margin-top: 5px
                }
    </style>
}
<div class="container">
    <section>
        <div class="panel panel-default" style="margin-top: 15px;">
            <div class="panel-body">
                <div class="row">
                    @foreach (var item in Model.PacketItems.OrderBy(p => p.PacketOrder))
                    {
                        item.PacketPrice = item.PacketPrice / (decimal)1.18;
                        <div class="col-md-3 col-sm-12" style="margin-top:15px;">
                            <div class="panel panel-mt text-center">
                                <div class='panel-heading' style='background:@Html.Raw(item.HeaderColor + "!important")'>
                                    <h4 class="m0">
                                        @item.PacketName
                                        @if (item.StarNumber == null || item.StarNumber == 0)
                                        {
                                            <small class="text-warning"><span class="glyphicon glyphicon-star"></span></small> }
                                        else
                                        {
                                            for (int i = 0; i < item.StarNumber; i++)
                                            {
                                                <small class="text-warning"><span class="glyphicon glyphicon-star"></span></small>}
                                        }
                                    </h4>
                                </div>
                                <div class='panel-body' style="background-color:@item.PacketColor">
                                    <b class="text-lg">
                                        @{ decimal packetDayPrice;
                                            packetDayPrice = (decimal)(item.PacketPrice / item.PacketDay); }
                                        @packetDayPrice.ToString("N") <i itemprop="priceCurrency" class="fa fa-turkish-lira"></i>  + KDV / Günlük
                                    </b>

                                </div>

                                <ul class="list-group">
                                    @foreach (var itemPFTItems in Model.PacketFeatureTypeItems.OrderBy(c => c.PacketFeatureTypeOrder))
                                    {

                                        var packetFeature = Model.PacketFeatureItems.FirstOrDefault(c => c.PacketFeatureTypeId == itemPFTItems.PacketFeatureTypeId && c.PacketId == item.PacketId);
                                        if (packetFeature != null)
                                        {
                                            var packetType = (EPacketFeatureType)packetFeature.FeatureType;
                                            switch (packetType)
                                            {
                                                case EPacketFeatureType.ProcessCount:
                                                    {
                                                        <li class='list-group-item' style="background-color:@item.PacketColor;  padding: 10px 10px; ">
                                                            @*<i class="fa fa-check" style="color:#057904; font-size:16px"></i>*@
                                                            @Html.Raw(packetFeature.FeatureProcessCount.HasValue ? packetFeature.FeatureProcessCount.Value.ToString() : "")

                                                            @itemPFTItems.PacketFeatureTypeName
                                                        </li>
                                                        break;
                                                    }
                                                case EPacketFeatureType.Active:
                                                    {


                                                        <li class='list-group-item' style="background-color:@item.PacketColor; padding: 10px 10px; ">
                                                            @*@if (packetFeature.FeatureActive.HasValue && packetFeature.FeatureActive.Value)
                                                            {
                                                                <i class="fa fa-check" style="color:#057904; font-size:14px"></i>
                                                            }*@
                                                            @itemPFTItems.PacketFeatureTypeName
                                                        </li>

                                                        break;
                                                    }
                                                case EPacketFeatureType.Content:
                                                    {

                                                        <li class='list-group-item' style="background-color:@item.PacketColor; padding: 10px 10px; ">
                                                            @*<i class="fa fa-check" style="color:#057904; font-size:14px"></i>*@
                                                            @packetFeature.FeatureContent
                                                            @itemPFTItems.PacketFeatureTypeName
                                                        </li>

                                                        break;
                                                    }

                                                default:
                                                    {
                                                        <li class='list-group-item' style="background-color:@item.PacketColor;padding: 10px 10px; ">
                                                            <i class="fa fa-check" style="color:#057904; font-size:14px"></i>
                                                            @packetFeature.FeatureContent
                                                            @itemPFTItems.PacketFeatureTypeName
                                                        </li>
                                                        break;
                                                    }

                                            }
                                        }
                                    }
                                    <li class='list-group-item' style="background-color:@item.PacketColor">
                                        <h3>
                                            @{ int lastNumber = Convert.ToInt32(item.PacketPrice) % 10;}
                                            @if (lastNumber == 9)
                                            {
                                                item.PacketPrice += 1;
                                            }
                                            else if (lastNumber % 10 == 1)
                                            {
                                                item.PacketPrice -= 1;
                                            }
                                            @item.PacketPrice.ToString("0") <i itemprop="priceCurrency" class="fa fa-turkish-lira"></i>  + KDV /
                                            @if (item.PacketDay == 365)

                                            {
                                                <span>Yıl</span>
                                            }
                                            else if (item.PacketDay % 30 == 0)
                                            {
                                                @(item.PacketDay / 30) <span>Ay</span>
                                            }
                                            else
                                            {
                                                @(item.PacketDay) <span>Gün</span>
                                            }

                                        </h3>
                                        @Html.Hidden("PacketId", item.PacketId)
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</div>




<script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>



